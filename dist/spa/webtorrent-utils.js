const path=require("path"),{networkInterfaces:networkInterfaces}=require("os"),getPieceMap=e=>{if(!e.ready)return[];const r=e.pieces.length,t=r+128-r%128,s=t/128,o=[];let a=1,n=0;for(let i=0;i<t;i++)e.pieces[i]?a&=0:a&=1,n++,n>=s&&(o.push(a),a=1,n=0);return o};export const getByteMap=e=>{const r=getPieceMap(e),t=[];let s=0,o=0;for(let a=0;a<r.length;a++)o|=r[a]<<s,s++,s>=8&&(t.push(o),s=0,o=0);return t};const calcPieces=(e,r)=>{const t=e.pieceLength,s=e.length,o=Math.ceil(s/t),a=r.peerPieces;if(!a.buffer)return{progress:0,buffer:null};let n=0;for(const i of a.buffer){const e=i.toString(2).split("").filter((e=>"1"===e)).length;n+=e}return{progress:n/o,has:n,length:s}},responseTorrentProps=["infoHash","name","paused","length","downloaded","uploaded","ready","waiting","progress","isSeeding","upload","token","completed","origin","path","pending","fromPost","postTitle","file","magnetURI","alphabizURI","isAutoUpload","isUploadByFiles","createdTime","completedTime","usedTime"],torrentToJson=(e,r,t)=>{const s={};if(responseTorrentProps.forEach((r=>{s[r]=e[r]})),!s.infoHash&&e.magnetURI&&(s.infoHash=e.magnetURI.toLowerCase().match(/:([0-9a-fA-F]{40})/)?.[1]),s.done=e.downloaded>=e.length,s.download=1!==e.progress&&!e.upload,s.upload=e.upload,s.recieved=e.received,s.files=e.files?e.files.map((r=>({name:r.name,path:path.resolve(e.path||"",r.path||r.name),progress:r.progress>0?r.progress:0}))).filter((e=>!e.name.match(/^_____padding_file_(.*)____$/))):[],e.timeRemaining&&(s.timeRemaining=e.timeRemaining),e.metadata&&(s.hasMetadata=!0),e.numPeers&&(s.peersNum=e.numPeers),e.subtitleList&&e.subtitleList.length&&(s.subtitleList=e.subtitleList),"undefined"===typeof r||!t)return s;const o=getByteMap(e);e.byteMap&&!o.some(((r,t)=>e.byteMap[t]!==r))||(e.byteMap=o,e.emit("byte-map-change")),s.byteMap=e.byteMap,e.trackerMap?s.trackerList=[...e.trackerMap.values()].map((e=>{const r={...e};return r.url.includes("@6")?r.isIpv6=!0:r.isIpv6=r.url.startsWith("ws")&&r.url.includes("ipv6"),r})).filter((({url:r,status:t})=>{if("error"!==t)return!0;let s=r;r.includes("@6")?s=r.replace("@6",""):s+="@6";const o=e.trackerMap.get(s);return!o||"error"===o.status})):s.trackerList=[];const a=e.client;return s.connections=e.wires.map((s=>{let o=s.remoteAddress;if(!o){const r=e._peers[s.peerId];if(!r||"webrtc"!==r.type)return null;{const e=r.conn?._pc?.currentRemoteDescription?.sdp?.match(/c=IN\sIP\d\s(.*)/)?.[1];if(!e)return s.destroy(),null;o=e}}let n="low";s._uploadThrottle._group===a.throttleGroups.mid&&(n="mid"),s._uploadThrottle._group===a.throttleGroups.high&&(n="high");let i=0,c=0;if(t.has(s._debugId)){const e=t.get(s._debugId);i=(s.downloaded-e.downloaded)/r,i<0&&(i=0),c=(s.uploaded-e.uploaded)/r,c<0&&(c=0)}t.set(s._debugId,{downloaded:s.downloaded,uploaded:s.uploaded});let d=!1;e.byteMap&&s.remote_byte_map&&(d=e.byteMap.some(((e,r)=>{try{const t=e.toString(2).padStart(8,"0"),o=s.remote_byte_map[r].toString(2).padStart(8,"0");for(let e=0;e<t.length;e++)if("0"===t[e]&&"1"===o[e])return!0;return!1}catch(t){return!1}})));const{progress:p,buffer:l}=calcPieces(e,s);return{id:s.peerId,address:o,isAbPeer:s._is_alphabiz_peer_,hasMeta:s.remote_has_meta,hasResource:d,remoteByteMap:s.remote_byte_map||[],uploadSpeed:c,downloadSpeed:i,user:s.remoteUser,subId:s.remoteSub,transactions:s.transactions,remoteGroup:s.remoteGroup,downloaded:s.downloaded,level:n,progress:p,buffer:l,secure:s._cryptoHandshakeDone}})).filter((e=>e)),s.connections.sort(((e,r)=>e.address&&e.address.localeCompare?e.address.localeCompare(r.address):0)),e.verifyStatus&&(s.verifyStatus=e.verifyStatus),e.pieces&&(s.verifiedPieces=e.pieces.reduce(((e,r,t)=>{if(null===r){const r=e[e.length-1];Array.isArray(r)?r[1]===t-1?r[1]=t:e.push(t):r===t-1?e[e.length-1]=[r,t]:e.push(t)}return e}),[])),s},getLocalIPList=()=>{const e=networkInterfaces(),r=new Set;for(const t in e){const s=e[t];s.forEach((e=>{r.add(e.address)}))}return[...r]},parseTrackerWarning=e=>"string"===typeof e&&e.includes("(")?e.substring(0,e.indexOf("(")).trim():e,addTracker=(e,r)=>{if(!e.discovery||!e.discovery.tracker)return;const t=e.discovery.tracker;if(!t._trackers.find((e=>e.announceUrl===r))&&t._createTracker)try{const e=[4];r.startsWith("http")&&e.push(6);for(const s of e){const e=t._createTracker(r,s);e&&(t._trackers.push(e),e.setInterval(),e.announce(t._defaultAnnounceOpts()))}}catch(s){console.error("addTracker error",s)}},removeTracker=(e,r,t)=>{if(!e.discovery||!e.discovery.tracker)return t();const s=e.discovery.tracker._trackers,o=s.findIndex((e=>e.announceUrl===r));if(-1===o)return t();const a=s[o];a&&a.destroy?a.destroy(((...e)=>{const o=s.findIndex((e=>e.announceUrl===r));-1!==o&&s.splice(o,1),"function"===typeof t&&t(...e)})):t()};export default{torrentToJson:torrentToJson,getLocalIPList:getLocalIPList,getPieceMap:getPieceMap,parseTrackerWarning:parseTrackerWarning,addTracker:addTracker,removeTracker:removeTracker};